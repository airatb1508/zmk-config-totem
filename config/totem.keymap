//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 18>;
        };

        bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <9 8>;
        };

        bslh {
            bindings = <&kp BACKSLASH>;
            key-positions = <30 29>;
        };
    };

    macros {
        kill_line: kill_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp END &kt LEFT_SHIFT &kp DEL>;
            label = "KILL_LINE";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp LC(C)>;
            label = "COPY";
        };

        kill: kill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp LC(X)>;
            label = "KILL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
               &kp Q             &kp W  &kp E         &kp R         &kp T      &kp Y            &kp U        &kp I      &kp O    &kp P
               &mt LCTRL A       &kp S  &kp D         &kp F         &kp G      &kp H            &kp J        &kp K      &kp L    &mt RCTRL SEMI
&mt LCTRL TAB  &mt LEFT_SHIFT Z  &kp X  &kp C         &kp V         &kp B      &kp N            &kp M        &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH  &mt RCTRL SQT
                                        &kp LEFT_GUI  &kp LEFT_ALT  &kp TAB    &lt 1 BACKSPACE  &lt 2 SPACE  &kp ENTER
            >;
        };

        num {
            bindings = <
                 &kp UNDER          &kp TILDE  &kp F3    &kp F4      &kp PLUS       &kp MINUS  &kp EQUAL  &kp GRAVE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
                 &mt LCTRL EXCL     &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp STAR   &kp LEFT_PARENTHESIS  &mt RCTRL RIGHT_PARENTHESIS
&mt LCTRL TILDE  &mt LEFT_SHIFT N1  &kp N2     &kp N3    &kp N4      &kp N5         &kp N6     &kp N7     &kp N8     &kp N9                &mt RIGHT_SHIFT N0           &tog 4
                                               &trans    &trans      &trans         &trans     &trans     &trans
            >;
        };

        nav {
            bindings = <
        &trans    &trans  &kp END  &trans     &trans         &trans            &trans            &kp LS(LA(N5))  &trans             &kp UP
        &kp HOME  &trans  &kp DEL  &kp RIGHT  &trans         &kp LA(LC(LEFT))  &kp LA(LC(DOWN))  &kp LA(LC(UP))  &kp LA(LC(RIGHT))  &trans
&trans  &trans    &trans  &trans   &trans     &kp LEFT       &kp DOWN          &trans            &trans          &trans             &kp BACKSLASH  &none
                          &trans   &trans     &lt 3 SPACE    &trans            &trans            &trans
            >;
        };

        bt {
            bindings = <
            &trans  &bt BT_SEL 3  &trans  &trans  &bt BT_SEL 2    &bt BT_SEL 4  &trans        &trans  &trans  &bt BT_SEL 1
            &trans  &trans        &trans  &trans  &trans          &trans        &trans        &trans  &trans  &trans
&bt BT_CLR  &trans  &trans        &trans  &trans  &trans          &trans        &bt BT_SEL 0  &trans  &trans  &trans        &bt BT_CLR
                                  &trans  &trans  &trans          &trans        &trans        &trans
            >;
        };

        game {
            bindings = <
         &kp Q             &kp W  &kp E      &kp R     &kp T        &kp Y   &kp U   &kp I      &kp O    &kp P
         &mt A LEFT_SHIFT  &kp S  &kp D      &kp F     &sl 5        &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp TAB  &mt Z RCTRL       &kp X  &kp C      &kp V     &kp B        &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                  &kp RCTRL  &kp LALT  &kp SPACE    &trans  &trans  &trans
            >;
        };

        game+ {
            bindings = <
         &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp Y   &kp U   &kp I      &kp O    &kp P
         &kp A   &kp S   &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp ESC  &kp Z   &kp X   &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &kp Y   &kp H   &kp M     &trans  &trans  &trans
            >;
        };
    };
};
